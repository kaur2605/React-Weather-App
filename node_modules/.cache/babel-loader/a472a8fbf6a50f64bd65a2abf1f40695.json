{"ast":null,"code":"var _jsxFileName = \"S:\\\\react\\\\weather app-without hooks\\\\weather-app-hooks\\\\src\\\\components\\\\Main.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Context from \"../Context\";\nimport Header from \"./Layout/Header\";\nimport Content from \"./Layout/Content\";\nimport DateTime from \"./DateTime\";\nimport Tagline from \"./Tagline\";\nimport WeatherSearch from \"./WeatherSearch\";\nimport WeatherData from \"./WeatherData\";\nimport Error from \"./Error\";\nimport Footer from \"./Layout/Footer\";\nconst API_KEY = \"b245681af662cb64bc5ef406654bcbaa\";\n\nconst Main = () => {\n  const [weather, setWeather] = useState(null);\n  const [city, setCity] = useState(null);\n  const [error, setError] = useState(null);\n\n  const api_call = async e => {\n    e.preventDefault();\n    const location = e.target.elements.city.value;\n\n    if (!location) {\n      return setError(\"Please enter the name of the city\"), setWeather(null);\n    }\n\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${API_KEY}&units=metric`;\n    const request = axios.get(url);\n    const response = await request;\n    setError(null);\n    console.log(response.data);\n    setWeather(response.data.main);\n    setCity(response.data.name);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      api_call,\n      weather,\n      city\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DateTime, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tagline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(WeatherSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), error !== null && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(Error, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 34\n    }\n  })), weather !== null && /*#__PURE__*/React.createElement(WeatherData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 32\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Main;","map":{"version":3,"sources":["S:/react/weather app-without hooks/weather-app-hooks/src/components/Main.js"],"names":["React","useState","axios","Context","Header","Content","DateTime","Tagline","WeatherSearch","WeatherData","Error","Footer","API_KEY","Main","weather","setWeather","city","setCity","error","setError","api_call","e","preventDefault","location","target","elements","value","url","request","get","response","console","log","data","main","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,IAAD,CAAlC;;AACA,QAAMmB,QAAQ,GAAG,MAAMC,CAAN,IAAW;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAAxC;;AACA,QAAI,CAACH,QAAL,EAAe;AACb,aAAOJ,QAAQ,CAAC,mCAAD,CAAR,EAA+CJ,UAAU,CAAC,IAAD,CAAhE;AACD;;AACD,UAAMY,GAAG,GAAI,qDAAoDJ,QAAS,UAASX,OAAQ,eAA3F;AACA,UAAMgB,OAAO,GAAG1B,KAAK,CAAC2B,GAAN,CAAUF,GAAV,CAAhB;AACA,UAAMG,QAAQ,GAAG,MAAMF,OAAvB;AACAT,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAlB,IAAAA,UAAU,CAACe,QAAQ,CAACG,IAAT,CAAcC,IAAf,CAAV;AACAjB,IAAAA,OAAO,CAACa,QAAQ,CAACG,IAAT,CAAcE,IAAf,CAAP;AACD,GAbD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAEf,MAAAA,QAAF;AAAYN,MAAAA,OAAZ;AAAqBE,MAAAA;AAArB,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIGE,KAAK,KAAK,IAAV,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,CAJrB,EAKGJ,OAAO,KAAK,IAAZ,iBAAoB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALvB,CADF,eAQE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAFF,CADF;AAeD,CAjCD;;AAmCA,eAAeD,IAAf","sourcesContent":["import React, { useState } from \"react\"\r\nimport axios from \"axios\";\r\n\r\nimport Context from \"../Context\"\r\n\r\nimport Header from \"./Layout/Header\"\r\nimport Content from \"./Layout/Content\"\r\nimport DateTime from \"./DateTime\"\r\nimport Tagline from \"./Tagline\"\r\nimport WeatherSearch from \"./WeatherSearch\"\r\nimport WeatherData from \"./WeatherData\"\r\nimport Error from \"./Error\"\r\nimport Footer from \"./Layout/Footer\"\r\n\r\nconst API_KEY = \"b245681af662cb64bc5ef406654bcbaa\"\r\n\r\nconst Main = () => {\r\n  const [weather, setWeather] = useState(null)\r\n  const [city, setCity] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const api_call = async e => {\r\n    e.preventDefault()\r\n    const location = e.target.elements.city.value\r\n    if (!location) {\r\n      return setError(\"Please enter the name of the city\"), setWeather(null)\r\n    }\r\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${API_KEY}&units=metric`\r\n    const request = axios.get(url)\r\n    const response = await request\r\n    setError(null)\r\n    console.log(response.data)\r\n    setWeather(response.data.main)\r\n    setCity(response.data.name)\r\n  }\r\n  return (\r\n    <div className=\"main\">\r\n      <Header />\r\n      <Content>\r\n        <Context.Provider value={{ api_call, weather, city }}>\r\n          <DateTime />\r\n          <Tagline />\r\n          <WeatherSearch />\r\n          {error !== null && <p>{<Error error={error} />}</p>}\r\n          {weather !== null && <WeatherData />}\r\n        </Context.Provider>\r\n        <Footer />\r\n      </Content>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main\r\n"]},"metadata":{},"sourceType":"module"}